#ifndef ENUMS_H
#define ENUMS_H


enum InfoType
{
    INFO_TYPE_ALL_CHANNEL_BASIC_INFO,
    INFO_TYPE_BASIC_CONFIG_FILE_INFO,
    INFO_TYPE_BASIC_EXPERIMENT_INFO,
    INFO_TYPE_BASIC_GENERAL_EXPERIMENT_PARAMETER,
    INFO_TYPE_CHA_STATUS_INFO,
    INFO_TYPE_COMPUTER_INFO,
    INFO_TYPE_CONFIG_EXP_CHA_PARAMS,
    INFO_TYPE_CONFIG_EXPERIMENT_INFO,
    INFO_TYPE_CONFIG_EXPERIMENT_PARAMS,
    INFO_TYPE_CONFIG_FILE_PATH_INFO,
    INFO_TYPE_CONFIG_SYSTEM_INFO,
    INFO_TYPE_DEVICE_BASIC_INFO,
    INFO_TYPE_DEVICE_USED_INFO,
    INFO_TYPE_ENVIRONMENT_INFO,
    INFO_TYPE_EXPERIMENT_CHANNEL_INFO,
    INFO_TYPE_HW_FILETER_INFO,
    INFO_TYPE_ONE_CHANNEL_BASIC_INFO,
    INFO_TYPE_RANGE_INFO,
    INFO_TYPE_SAMPLE_RATE_INFO,
    INFO_TYPE_SENSOR_INFO
};


enum EventType
{
    EVENT_TYPE_CREATE_FILE,
    EVENT_TYPE_RECREATE_FILE,
    EVENT_TYPE_NEXT_WORK_STAGE,
    EVENT_TYPE_START_SAMPLE,
    EVENT_TYPE_STOP_SAMPLE,
    EVENT_TYPE_STOP_EXPERIMENT,
    EVENT_TYPE_LABEL,
    EVENT_TYPE_CHANGE_GAIN,
    EVENT_TYPE_CHANGE_DISP_RANGE,
    EVENT_TYPE_CHANGE_LOWPASS,
    EVENT_TYPE_CHANGE_HIGHPASS,
    EVENT_TYPE_CHANGE_SAMPLE_RATE,
    EVENT_TYPE_CHANGE_50HZ,
    EVENT_TYPE_DROP,
    EVENT_TYPE_IMPEDANCE,
    EVENT_TYPE_OTHER
};

#endif // ENUMS_H
